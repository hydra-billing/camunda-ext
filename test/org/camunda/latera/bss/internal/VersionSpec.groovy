package org.camunda.latera.bss.internal

import spock.lang.*
import org.camunda.latera.bss.internal.Version

class VersionSpec extends Specification {
  def "Default constructor"() {
    expect:
    (new Version(      main,        major,        minor,      mod) as String) == result
    (new Version(main: main, major: major, minor: minor, mod: mod) as String) == result

    where:
    main |major |minor|mod  |result
    5    |1     |2    |5    |'5.1.2.5'
    '5'  |'1'   |'2'  |'5'  |'5.1.2.5'
    5    |1     |null |5    |'5.1.0.5'
    '5'  |'1'   |null |'5'  |'5.1.0.5'
    5    |null  |null |5    |'5.0.0.5'
    '5'  |null  |null |'5'  |'5.0.0.5'
    5    |1     |2    |null |'5.1.2'
    '5'  |'1'   |'2'  |null |'5.1.2'
    5    |null  |2    |null |'5.0.2'
    '5'  |null  |'2'  |null |'5.0.2'
    5    |1     |null |null |'5.1'
    '5'  |'1'   |null |null |'5.1'
    5    |null  |null |null |'5'
    '5'  |null  |null |null |'5'
    5.1  |null  |2    |5    |'5.1.2.5'
    '5.1'|null  |'2'  |'5'  |'5.1.2.5'
    5.1  |null  |null |5    |'5.1.0.5'
    '5.1'|null  |null |'5'  |'5.1.0.5'
    5.1  |null  |2    |null |'5.1.2'
    '5.1'|null  |'2'  |null |'5.1.2'
    5.1  |null  |null |null |'5.1'
    '5.1'|null  |null |null |'5.1'
    null |5.1   |2    |5    |'5.1.2.5'
    null |'5.1' |'2'  |'5'  |'5.1.2.5'
    null |5.1   |null |5    |'5.1.0.5'
    null |'5.1' |null |'5'  |'5.1.0.5'
    null |5.1   |2    |null |'5.1.2'
    null |'5.1' |'2'  |null |'5.1.2'
    null |5.1   |null |null |'5.1'
    null |'5.1' |null |null |'5.1'
  }

  def "Constructor for String input"() {
    expect:
    (new Version(input) as String) == result

    where:
    input|result
    '5.1.2.5'|'5.1.2.5'
    '5.1.0.5'|'5.1.0.5'
    '5.0.2.5'|'5.0.2.5'
    '5.0.0.5'|'5.0.0.5'
    '5.1.2'  |'5.1.2'
    '5.0.2'  |'5.0.2'
    '5.1.0'  |'5.1.0'
    '5.1'    |'5.1'
    '5.0'    |'5.0'
    '5'      |'5'
  }

  def "Constructor for Number input"() {
    expect:
    (new Version(input) as String) == result

    where:
    input|result
    5    |'5'
    5.1  |'5.1'
    5.12 |'5.1' //more than 1 digits after decimal point are being dropped
    5.125|'5.1' //more than 1 digits after decimal point are being dropped
  }

  def "#toNumber"() {
    expect:
    (new Version(input).toNumber()) == result

    where:
    input|result
    '5.1.2.5'|5.1
    '5.1.0.5'|5.1
    '5.0.2.5'|5.0
    '5.0.0.5'|5.0
    '5.1.2'  |5.1
    '5.0.2'  |5.0
    '5.1.0'  |5.1
    '5.1'    |5.1
    '5.0'    |5.0
    '5'      |5
  }

  def "#compareTo with Version or String input"() {
    expect:
    (new Version(first)).compareTo(new Version(second)) == result
    (new Version(first)).compareTo(second) == result

    where:
    first    |second   |result
    '5.1.2.6'|'5.1.2.5'| 0
    '5.1.2.5'|'4.1.2.5'| 1
    '5.1.2.5'|'5.1.2'  | 0
    '5.1.2.5'|'4.1.2'  | 1
    '5.1.2.5'|'5.1'    | 0
    '5.1.2.5'|'4.1'    | 1
    '5.1.2.5'|'5.0'    | 1
    '5.1.2.5'|'4.0'    | 1
    '5.1.2.5'|'5'      | 0
    '5.1.2.5'|'4'      | 1
    '4.1.2.5'|'5.1.2.5'|-1
    '4.1.2.5'|'5.1.2'  |-1
    '4.1.2.5'|'5.1'    |-1
    '4.1.2.5'|'5.0'    |-1
    '4.1.2.5'|'5'      |-1
    '4.1.2.5'|'4'      | 0
    '5.1.0.5'|'5.1.2.5'|-1
    '5.1.0.5'|'4.1.2.5'| 1
    '5.1.0.5'|'5.1.2'  |-1
    '5.1.0.5'|'4.1.2'  | 1
    '5.1.0.5'|'5.1'    | 0
    '5.1.0.5'|'4.1'    | 1
    '5.1.0.5'|'5.0'    | 1
    '5.1.0.5'|'4.0'    | 1
    '5.1.0.5'|'5'      | 0
    '5.1.0.5'|'4'      | 1
    '5.0.2.5'|'5.1.2.5'|-1
    '5.0.2.5'|'4.1.2.5'| 1
    '5.0.2.5'|'5.1.2'  |-1
    '5.0.2.5'|'4.1.2'  | 1
    '5.0.2.5'|'5.1'    |-1
    '5.0.2.5'|'4.1'    | 1
    '5.0.2.5'|'5.0'    | 0
    '5.0.2.5'|'4.0'    | 1
    '5.0.2.5'|'5'      | 0
    '5.0.2.5'|'4'      | 1
    '5.1.2'  |'5.1.2.5'|-1
    '5.1.2'  |'4.1.2.5'| 1
    '5.1.2'  |'5.1.2'  | 0
    '5.1.2'  |'4.1.2'  | 1
    '5.1.2'  |'5.1'    | 0
    '5.1.2'  |'4.1'    | 1
    '5.1.2'  |'5.0'    | 1
    '5.1.2'  |'4.0'    | 1
    '5.1.2'  |'5'      | 0
    '5.1.2'  |'4'      | 1
    '5.0.2'  |'5.1.2.5'|-1
    '5.0.2'  |'4.1.2.5'| 1
    '5.0.2'  |'5.1.2'  |-1
    '5.0.2'  |'4.1.2'  | 1
    '5.0.2'  |'5.1'    |-1
    '5.0.2'  |'4.1'    | 1
    '5.0.2'  |'5.0'    | 0
    '5.0.2'  |'4.0'    | 1
    '5.0.2'  |'5'      | 0
    '5.0.2'  |'4'      | 1
    '5.1'    |'5.1.2.5'|-1
    '5.1'    |'4.1.2.5'| 1
    '5.1'    |'5.1.2'  |-1
    '5.1'    |'4.1.2'  | 1
    '5.1'    |'5.1'    | 0
    '5.1'    |'4.1'    | 1
    '5.1'    |'5.0'    | 1
    '5.1'    |'4.0'    | 1
    '5.1'    |'5'      | 0
    '5.1'    |'4'      | 1
    '5.0'    |'5.1.2.5'|-1
    '5.0'    |'4.1.2.5'| 1
    '5.0'    |'5.1.2'  |-1
    '5.0'    |'4.1.2'  | 1
    '5.0'    |'5.1'    |-1
    '5.0'    |'4.1'    | 1
    '5.0'    |'5.0'    | 0
    '5.0'    |'4.0'    | 1
    '5.0'    |'5'      | 0
    '5.0'    |'4'      | 1
    '5'      |'5.1.2.5'|-1
    '5'      |'4.1.2.5'| 1
    '5'      |'5.1.2'  |-1
    '5'      |'4.1.2'  | 1
    '5'      |'5.1'    |-1
    '5'      |'4.1'    | 1
    '5'      |'5.0'    |-1
    '5'      |'4.0'    | 1
    '5'      |'5'      | 0
    '5'      |'4'      | 1
  }
  def "#compareTo with Number input"() {
    expect:
    (new Version(first)).compareTo(second) == result

    where:
    first    |second   |result
    '5.1.2.5'|5.1    | 0
    '5.1.2.5'|4.1    | 1
    '5.1.2.5'|5.0    | 1
    '5.1.2.5'|4.0    | 1
    '5.1.2.5'|5      | 0
    '5.1.2.5'|4      | 1
    '5.1.0.5'|5.1    | 0
    '5.1.0.5'|4.1    | 1
    '5.1.0.5'|5.0    | 1
    '5.1.0.5'|4.0    | 1
    '5.1.0.5'|5      | 0
    '5.1.0.5'|4      | 1
    '5.0.2.5'|5.1    |-1
    '5.0.2.5'|4.1    | 1
    '5.0.2.5'|5.0    | 0
    '5.0.2.5'|4.0    | 1
    '5.0.2.5'|5      | 0
    '5.0.2.5'|4      | 1
    '5.1.2'  |5.1    | 0
    '5.1.2'  |4.1    | 1
    '5.1.2'  |5.0    | 1
    '5.1.2'  |4.0    | 1
    '5.1.2'  |5      | 0
    '5.1.2'  |4      | 1
    '5.0.2'  |5.1    |-1
    '5.0.2'  |4.1    | 1
    '5.0.2'  |5.0    | 0
    '5.0.2'  |4.0    | 1
    '5.0.2'  |5      | 0
    '5.0.2'  |4      | 1
    '5.1'    |5.1    | 0
    '5.1'    |4.1    | 1
    '5.1'    |5.0    | 1
    '5.1'    |4.0    | 1
    '5.1'    |5      | 0
    '5.1'    |4      | 1
    '5.0'    |5.1    |-1
    '5.0'    |4.1    | 1
    '5.0'    |5.0    | 0
    '5.0'    |4.0    | 1
    '5.0'    |5      | 0
    '5.0'    |4      | 1
    '5'      |5.1    |-1
    '5'      |4.1    | 1
    '5'      |5.0    |-1
    '5'      |4.0    | 1
    '5'      |5      | 0
    '5'      |4      | 1
  }
}